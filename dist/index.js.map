{"version":3,"file":"index.js","sources":["../src/button/index.js","../src/card/index.js","../src/index.js"],"sourcesContent":["import React from 'react'\nimport cx from 'classnames'\n\nconst Base = ({ text, handleClick, className }) => {\n  return (\n    <button\n      className={cx(\n        'px-3 py-1',\n        'rounded border-gray-700 border text-white',\n        className\n      )}\n      onClick={handleClick}\n    >\n      <span>{text}</span>\n    </button>\n  )\n}\nconst Button = ({ type, text, handleClick, className }) => {\n  if (type === 'primary') {\n    return (\n      <Base\n        text={text}\n        className={cx('bg-indigo-600', className)}\n        onClick={handleClick}\n      />\n    )\n  }\n  return <Base text={text} className={className} onClick={handleClick} />\n}\n\nexport default Button\n","import React, { useState } from 'react'\n// import cx from 'classnames'\nimport Button from '../button'\nimport styles from './card.module.css'\nimport Select from 'react-select'\n\nconst options = [\n  {\n    label: 'Prediction',\n    options: [\n      { label: 'Group 1, option 1', value: 'value_1' },\n      { label: 'Group 1, option 2', value: 'value_2' }\n    ]\n  },\n  {\n    label: 'Common',\n    options: [\n      { label: 'Group 1, option 1', value: 'value_1' },\n      { label: 'Group 1, option 2', value: 'value_2' }\n    ]\n  },\n  { label: 'Another root option', value: 'value_4' }\n]\nconst customStyles = {\n  menu: (provided, state) => ({\n    ...provided,\n    width: state.selectProps.width,\n    borderBottom: '1px dotted pink',\n    color: state.selectProps.menuColor,\n    padding: 20\n  }),\n\n  control: (_, { selectProps: { width } }) => ({\n    width: width\n  }),\n\n  singleValue: (provided, state) => {\n    const opacity = state.isDisabled ? 0.5 : 1\n    const transition = 'opacity 300ms'\n\n    return { ...provided, opacity, transition }\n  }\n}\n\nconst Card = ({ text }) => {\n  const handleClick = () => {\n    // eslint-disable-next-line no-undef\n    alert('fired')\n  }\n  const [selectedOption, setSelectedOption] = useState(null)\n  const handleChange = (selectedOption) => {\n    setSelectedOption(selectedOption)\n    console.log(`Option selected:`, selectedOption)\n  }\n  return (\n    <div className={styles.card}>\n      <div>\n        <Button\n          type='primary'\n          text='AND'\n          handleClick={handleClick}\n          className='rounded-r-none'\n        />\n        <Button\n          text='OR'\n          handleClick={handleClick}\n          className='rounded-l-none'\n        />\n      </div>\n      <div className='grid grid-cols-3 gap-4 mt-10 mb-5'>\n        <Select\n          value={selectedOption}\n          onChange={handleChange}\n          options={options}\n          styles={{}}\n        />\n        <Select\n          value={selectedOption}\n          onChange={handleChange}\n          options={options}\n          styles={{}}\n        />\n        <Select\n          value={selectedOption}\n          onChange={handleChange}\n          options={options}\n          styles={{}}\n        />\n      </div>\n      {/* Figure out a render logic for dynamic list */}\n\n      <Button type='primary' text='+ Add filter' handleClick={handleClick} />\n    </div>\n  )\n}\nexport default Card\n","import React from 'react'\n// import cx from 'classnames'\nimport 'tailwindcss/tailwind.css'\nimport Card from './card'\nexport const QueryBuilder = ({ text }) => {\n  return <Card />\n}\n"],"names":["Base","text","handleClick","className","React","cx","Button","type","options","label","value","Card","alert","useState","selectedOption","setSelectedOption","handleChange","console","log","styles","card","QueryBuilder"],"mappings":"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"}